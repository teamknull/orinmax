@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));


@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
  /* DNA palette */
  --dna-a: #edd382; /* adenine */
  --dna-t: #717ec3; /* thymine */
  --dna-c: #ff6f59; /* cytosine */
  --dna-g: #85ffc7; /* guanine */
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}


@keyframes spin-slow {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(360deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 10s linear infinite;
}

.bg-gradient-radial {
  background: radial-gradient(circle, var(--tw-gradient-stops));
}

/* Adding 3D perspective and transform utilities for holographic DNA effect */
.perspective-1000 {
  perspective: 1000px;
}

.preserve-3d {
  transform-style: preserve-3d;
}

/* Enhanced holographic glow effects */
.holographic-glow {
  filter: drop-shadow(0 0 10px currentColor) drop-shadow(0 0 20px currentColor);
}

/* 3D ribbon animation for DNA strands */
@keyframes dna-rotate {
  from {
    transform: rotateY(0deg) rotateX(10deg);
  }
  to {
    transform: rotateY(360deg) rotateX(10deg);
  }
}

.animate-dna-rotate {
  animation: dna-rotate 12s linear infinite;
}

/* DNA Helix Styles */
.dna-container {
  width: 150px;
  height: 400px;
  perspective: 2500px;
}

.bases {
  width: 180px;
  height: 15px;
  transform-style: preserve-3d;
  transform-origin: center center 0;
  animation: dna-spin 4s reverse linear infinite;
  background-size: 100% 3px;
  background-position: 0 5px;
  background-repeat: no-repeat;
  position: relative;
}

.bases::before,
.bases::after {
  content: none; /* do not generate pseudo-elements */
  display: none;
  position: absolute;
  width: 0;
  height: 0;
  border-radius: 0;
  animation: none;
  background: transparent;
  box-shadow: none;
}

.bases::before {
  transform: translate(-5px, -5px);
  left: 0;
}

.bases::after {
  transform: translate(5px, 3px);
  right: 0;
}

/* Nucleotide base pair styles */
.bases.at {
  background-image: linear-gradient(
    to right,
    transparent 10%,
    var(--dna-a) 10%,
    var(--dna-a) 50%,
    var(--dna-t) 50%,
    var(--dna-t) 90%,
    transparent 90%
  );
}

.bases.at::before {
  background: var(--dna-a);
}

.bases.at::after {
  background: var(--dna-t);
}

.bases.ta {
  background-image: linear-gradient(
    to right,
    transparent 10%,
    var(--dna-t) 10%,
    var(--dna-t) 50%,
    var(--dna-a) 50%,
    var(--dna-a) 90%,
    transparent 90%
  );
}

.bases.ta::before {
  background: var(--dna-t);
}

.bases.ta::after {
  background: var(--dna-a);
}

.bases.cg {
  background-image: linear-gradient(
    to right,
    transparent 10%,
    var(--dna-c) 10%,
    var(--dna-c) 50%,
    var(--dna-g) 50%,
    var(--dna-g) 90%,
    transparent 90%
  );
}

.bases.cg::before {
  background: var(--dna-c);
}

.bases.cg::after {
  background: var(--dna-g);
}

.bases.gc {
  background-image: linear-gradient(
    to right,
    transparent 10%,
    var(--dna-g) 10%,
    var(--dna-g) 50%,
    var(--dna-c) 50%,
    var(--dna-c) 90%,
    transparent 90%
  );
}

.bases.gc::before {
  background: var(--dna-g);
}

.bases.gc::after {
  background: var(--dna-c);
}

/* Inline base letters placed on the horizontal line */
.base-label {
  position: absolute;
  top: 5px; /* centers vertically on the 3px stripe placed at y=5px */
  font-weight: 800;
  font-size: 18px;
  line-height: 1;
  pointer-events: none;
  color: currentColor;
  text-shadow: none;
  filter: none;
  z-index: 2;
}

.base-label.left {
  left: 0; /* at the start of the line */
  transform: translate(-50%, -50%);
}

.base-label.right {
  right: 0; /* at the end of the line */
  transform: translate(50%, -50%);
}

/* Match label colors to their respective bases */
.label-a { color: var(--dna-a); }
.label-t { color: var(--dna-t); }
.label-c { color: var(--dna-c); }
.label-g { color: var(--dna-g); }

@keyframes dna-spin {
  0% {
    transform: rotateY(360deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
